*, *::after, *::before {
    box-sizing: border-box;
    /* border: 1px solid grey; */
}

/* variables */
:root {
    --cell-size: 150px;
    /* making the symbol slightly smaller than the grid cell */
    --mark-size: calc(var(--cell-size) * 0.9);
    --mark-color: white;

    --x-color: white;
    --o-color: white;
}

/* element selectors */

body {
    margin: 0;
    width: 100%;
    /* height: 100vh; */
    height: 100%;
    display: grid;
    place-items: center;
    place-content: center;
    background-color: black;
    color: white;
    font-family: 'Comfortaa', futura, sans-serif;
}

main {
    width: 100vw;
    display: grid;
    grid-template-columns: 25% 50% 25%;

    /*
    
    column 1:   <aside class="left">      | 1fr
    column 2:   <section class="center">  | 2fr
    column 3:   <aside class="right">     | 1fr

     */
}

h1 {
    font-size: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

svg {
    color: white;
    background-color: black;
}

/* <svg> elements when user hovers over them*/
.add-player-info:hover,
.submit-player-info:hover,
#reset-icon:hover,
.clear-scores:hover,
.btn-save:hover,
.btn-retrieve-data:hover,
#no-sound-icon:hover,
#play-sound-icon:hover {
    transform: scale(1.3);
    /* color: rgb(136, 216, 109); */
    transition: 0.3s;
}


/*
---------------------------------------------------------------------------------------
left section of screen: score board -> column 1/3 in gid in <main>
---------------------------------------------------------------------------------------
*/

aside.left { /* left section of sceen, column 1/3 in gid in <main> */
    display: grid;
    grid-template-columns: 120%;
    grid-template-rows: 100%;
       
}

aside.left .score-board { /* <section> containing score board */
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 15% 45% 40%;
}

aside.left .score-board .score-board-title { /* <h3> title on score board */
    display: flex;
    flex-direction : column;
    justify-content: flex-start;
    font-size: 2rem;
}
aside.left .score-board .player-scores { /* <div> containing both players name + score */
    font-size: 1.7rem;
    /* background-color: blueviolet; */
    
}

.left .player-scores .score-board-display { /* <ul> containing one player's name + score */
    display: inline-block;
    list-style: none;
    margin: 0;
    padding: 0;
    margin: 2rem;
}

.left .score-board .player-scores .score { /* <li> displaying a player score */
    font-size: 2.2rem;
    padding-top: 2.5rem;
}

.left .score-board .draw-score-reset { /* <div> showing number of draws + reset button */
    /* display: grid;
    grid-template-columns: 50% 50%;
    grid-template-rows: 100%; */
    width: 100%;
    height: 50%;
    display: flex;
    justify-content: center;
    align-content: center;
    justify-items: center;
    /* background-color: grey; */
    gap: 3em;

}

.left .score-board .draw-score-reset .btn-clear-scores {/* <button> resets all scores+draws back to 0 */
    background-color: BLACK;
    border: none;
    cursor: pointer;
    display: inline;
    align-items:center;
    justify-content:center;
    /* background-color: aqua; */
    padding: 0 4em;

}

.left .score-board .draw-score-reset .draw-score { /* <div> showing number of draws */
    font-size: 1.8rem;
    display: inline-flex;
    align-items:center;
    justify-content:center;
    /* background-color: #FA645C; */
    padding-right: 0.5em;
}



.left .score-board .draw-score-reset .btn-clear-scores .clear-scores:hover { /* <svg> on reset scores <button> */
    color: #FA645C;
}

.player-scores, .scores-title, .score, .current-player-display {
    display:flex;
    justify-content: center;
    align-items: center;
}

/*
---------------------------------------------------------------------------------------
center section of screen: grid+start game/reset buttons -> column 2/3 in gid in <main>
---------------------------------------------------------------------------------------
*/


/* .center: <section> elemement at center of sceen, column 2/3 in gid in <main> */

/* overlay button that starts the game and then disappears */
.center .start-game-btn {
    font-size: 2.5rem;
    font-family: 'Comfortaa', futura, sans-serif;
    background-color: black;
    border: 2px solid white;
    color:  white;
    padding: 1em 1em;
    cursor: pointer;
    border-radius: 8px;
    position:absolute;
    top:46.5%;
    left:50%;
    transform:translate(-50%, -50%);
    z-index: 1000;
    opacity: 0;
    
}

.center .start-game-btn:hover {
    background-color: rgb(152, 201, 146);
    border: 2px solid rgb(26, 60, 18);
    color: rgb(26, 60, 18);
    transition: 0.4s;
}



/* grid */
.center .grid {
    width: 100%;
    height: 100%;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    grid-template-columns: repeat(3, auto);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 3px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

/* removing the outside border of the grid */
.cell:nth-child(1), .cell:nth-child(2), .cell:nth-child(3) {
    border-top: none;
}
.cell:nth-child(3n+3) {
    border-right: none;   
}
.cell:nth-child(9), .cell:nth-child(8), .cell:nth-child(7) {
    border-bottom: none;
}
.cell:nth-child(3n+1) {
    border-left: none;   
}

/* 
________________________________________________________________________________________
 */

/* x and o symbols for grid -> 'x' class for cross, 'o' class for circle*/

/* x symbol */
.cell.x::before, 
.cell.x::after, 
.grid.x .cell:not(.x):not(.o):hover::before,
.grid.x .cell:not(.x):not(.o):hover::after  {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
    background-color: white;
}

.cell.x::before,
.grid.x .cell:not(.x):not(.o):hover::before {
    transform: rotate(45deg);
}
.cell.x::after,
.grid.x .cell:not(.x):not(.o):hover::after {
    transform: rotate(-45deg);
}

/*  o symbol */
.cell.o::before,
.cell.o::after,
.grid.o .cell:not(.x):not(.o):hover::before,
.grid.o .cell:not(.x):not(.o):hover::after  {
    content: '';
    position: absolute;
    border-radius: 50%;    
}

/* larger circle i.e. "outside" circle */
.cell.o::before,
.grid.o .cell:not(.x):not(.o):hover::before {
    width: calc(var(--mark-size)* 0.9);
    height: calc(var(--mark-size)* 0.9);
    
}

/* slightly smaller circle i.e. "inside" circle */
.cell.x::before, .cell.x::after {
    background-color: var(--x-color, white);
}
.cell.o::before  {
    background-color: var(--o-color, white);
}


/* preview lighter symbol when user hovers over empty cell */
.grid.x .cell:not(.x):not(.o):hover::before,
.grid.x .cell:not(.x):not(.o):hover::after,
.grid.o .cell:not(.x):not(.o):hover::before {
    background-color: rgb(47, 47, 47);
}

.cell.o::before,
.grid.o .cell:not(.x):not(.o):hover::before {
    width: calc(var(--mark-size)* 0.9);
    height: calc(var(--mark-size)* 0.9);
    
}

.cell.o::after,
.grid.o .cell:not(.x):not(.o):hover::after {
    width: calc(var(--mark-size)* 0.6);
    height: calc(var(--mark-size)* 0.6);
    background-color: black;
}

/* when cursor moves over cell that already has an x or o it changes to signal to user that cell is not available */
.cell.x, .cell.o {
    cursor: not-allowed;
}

/* buttons under grid: reset */

.center .settings {
    display:flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 2em;
    padding-top: 0.5rem;
}

.center .settings .btn-reset, .btn-sound, .btn-save, .btn-retrieve-data { /* <button> resets game and clears the board */
    /* margin: 0 2em; */
    /* padding: 0; */
    background-color: black;
    border: none;
    cursor: pointer;
}

#reset-icon:hover { /* <svg> on reset <button> */
    color: rgb(64,200,225);

}

#no-sound-icon:hover, #play-sound-icon:hover {
    color:rgb(237, 237, 122);
}

#save-icon:hover {
    color: rgb(238, 131, 184);
}

#retrieve-icon:hover {
    color: rgb(163, 117, 205)
}

/*  
---------------------------------------------------------------------------------------
right section of screen: players + turn display -> column 3/3 in gid in <main> 
---------------------------------------------------------------------------------------
*/


aside.right { /* <aside> element that contains:
                    <section class="current-player-display"> -> displays current player
                    <section class="players"> -> players
                */
    display: grid;
    grid-template-columns: 80%;
    grid-template-rows: 1fr 2fr;
       
}

.right .current-player-display {
    display: flex;
    align-items: center;
    /* background-color: #FA645C; */
    padding: 0;
    /* border: 2px solid white; */
    color: rgb(255 239 0);
    width: 118%;
    font-size: 2.5rem;

}

.right .current-player-display .current-player { /* <div> displaying whose turn it is */
    display: flex;
    width: 118%;
    /* text-align: center; */
    font-size: 2.5rem;
    /* margin-left: -5%; */
    
}

.your-turn {
    margin: 0;
    padding: 0;
    /* background-color: red; */
    width: 118%;
}
/* player input -> lets user enter information like name */

.right .players { /* <section> element -> contains 2 <div> elements, one for each player */
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 1fr 1fr;
    font-size: 2rem;
    /* background-color: blue; */
}

.right .players .player { /* <div> element for a player that contains 2 elements:
                                - <div> that contains <span> + <span> + <button>
                                - <form> that contains <input> + <button> (hidden)
                             */
    display: grid;
    grid-template-columns: 120%;
    grid-template-rows: 50% 50%;
    /* background-color: green; */
}


.right .players .player .player-visible { /* <div> element that contains 3 elements:
                                            - <span> -> contains <svg> for player symbol 
                                            - <span> -> player name
                                            - <button> -> contains <svg> for add info
                                            */

    display:flex;
    align-items: center;
    
    gap: 0.75rem;
}

#player-2-symbol-display {
    padding-left: 0.3rem;
}


/* buttons for adding and submitting user info */
.right .players .player .player-visible .btn-add-player-info,
.right .players .player .player-input-form .btn-submit-player-input {
    margin: 0 1em;
    padding: 0;
    background-color: black;
    border: none;
    cursor: pointer;
}

/* buttons hover effect */
.right .players .player .player-visible .btn-add-player-info .add-player-info:hover,
.right .players .player .player-input-form .btn-submit-player-input .submit-player-info:hover{
    color: rgb(150, 223, 141);
} 

/* <form> element contains: <div> | <input> | <button> */
.player-input-form {    
    display: none;      /* unless user clicks add-info button, form is hidden */
    /* background: pink; */
}

.player-input-form.display { /* when user clicks add-info button: 'display' class is added */
          /* when display class is added, the <form> element is visible */
   
    /* width: 90%; */
    display:flex;
    align-items: center;
    gap: 0.2rem;
}

.right .players .player .player-input-form .name-input {
    background-color: black;
    border-radius: 8px;
    width: 15em;
    height: 2.5em;
    border: 2px solid rgb(150, 223, 141);
    color: rgb(150, 223, 141);
    font-family: 'Comfortaa', futura, sans-serif;
    font-size: 1.1rem;
    outline: none;
    box-shadow: none;
    
}
.right .players .player .player-input-form .name-input::placeholder {
    color: rgb(150, 223, 141);
    opacity: 0.5;
}

/* svg for submit info */
.right .players .player .player-input-form .btn-submit-player-input .submit-player-info {
    color: rgb(150, 223, 141);
}


/* 
---------------------------------------------------------------------------------------
Overlay Message displaying winner or draw
---------------------------------------------------------------------------------------
*/

/* overlay message when there's a win or draw */
.message {
    display: none;
    position: fixed;
    text-align: center;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* background-color: rgba(57, 84, 51, 0.9); */
    background-color: rgba(59, 82, 53, 0.97);
    justify-content: center;
    align-items: center;
    color: yellow;
    font-size: 6rem;
    flex-direction: column;
}

.message.display-win {
    display: flex;
    background-color: rgba(59, 82, 53, 0.97);
    color: yellow;
}

.message.display-draw {
    display: flex;
    background-color: rgba(52, 66, 114, 0.97)
}

.message .btn {
    font-size: 2.5rem;
    font-family: 'Comfortaa', futura, sans-serif;
    background-color: rgb(164, 197, 153);
    border: 3px solid rgb(40, 61, 35);
    color:  rgb(40, 61, 35);
    padding: .25em .5em;
    cursor: pointer;
    margin-top: 1em;
    border-radius: 8px;
}

.message.display-draw .btn {
    font-size: 2.5rem;
    font-family: 'Comfortaa', futura, sans-serif;
    background-color: rgb(128, 193, 229);
    border: 3px solid rgb(47, 37, 94);
    color:  rgb(47, 37, 94);
    padding: .25em .5em;
    cursor: pointer;
    margin-top: 1em;
    border-radius: 8px;
} 

.message .btn:hover {
    background-color: rgb(40, 61, 35);
    border: 3px solid rgb(164, 197, 153);
    color: rgb(164, 197, 153);
    transition: 0.4s;
}

.message.display-draw .btn:hover {
    background-color: rgb(47, 37, 94);
    border: 3px solid rgb(128, 193, 229);
    color: rgb(128, 193, 229);
    transition: 0.4s;
}

.message .draw-sad-face .sad-face {
    background-color: rgba(59, 82, 53, 0);
    color: yellow;

}
.message .draw-sad-face {
    display:flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    margin-bottom: 1rem;
 
}

/* ___________________________________________________________________________________*/

/* small screen: w = 1440px | h= 900px */
/* second screen:  w = 1920px | h=1080px */
/* phone screen: ?? */

/* #player-1-symbol-display {
    background-color: #FA645C;
} */

.player-symbol:hover {
    cursor: pointer;
}

#player-1-symbol{ /* <div> outer li parent*/
    float: left;
    position: relative;
}

#player-2-symbol{ /* <div> outer li parent*/
    float: left;
    position: relative;
}

#player-1-symbol-display{/* <a> symbol */
    text-decoration: none;
    /* background-color: pink; */
}

#color-palette-player-1 {/* <ul>  -> child*/
    display: none;
    font-size: 0.7em;
    list-style: none;
    position: absolute;
    right: 0;
    top: 2.5rem;
    z-index: 1000;
}

#color-palette-player-1.show-colors {/* <ul>  -> child*/
    display: block;
    font-size: 0.7em;
    list-style: none;
    position: absolute;
    right: 0;
    top: 2.5rem;
}

#color-palette-player-2 {/* <ul>  -> child*/
    display: none;
    font-size: 0.7em;
    list-style: none;
    position: absolute;
    right: 0;
    top: 2.5rem;
}

#color-palette-player-2.show-colors {/* <ul>  -> child*/
    display: block;
    font-size: 0.7em;
    list-style: none;
    position: absolute;
    left: -2.3rem;
    top: 2.5rem;
}
    

.color-option { /* <li> */
    position: relative;
    padding: 0;
    margin: 0;
    font-size: 1em;
    width: 2.8rem;
    height: 1.35rem;
    border: 2.5px solid black;
}

.color-tag {/* <a> */
    text-decoration: none;
    display: block;

}

#red1, #red2  {
    background-color: rgb(255, 99, 71);
    border: 2px solid rgb(255, 99, 71);
    border-radius: 4px 4px 0px 0px;

} 

#blue1, #blue2 {
    background-color: rgb(31, 81, 255);
    border: 2px solid rgb(31, 81, 255)

} 

#green1, #green2 {
    background-color: rgb(80, 200, 120);
    border: 2px solid rgb(80, 200, 120);
} 

#yellow1, #yellow2 {
    background-color: rgb(255 239 0);
    border: 2px solid rgb(255 239 0);
} 

#pink1, #pink2 {
    background-color: rgb(249, 120, 185);
    border: 2px solid rgb(249, 120, 185);
} 

#purple1, #purple2 {
    background-color: rgb(154,97,208);
    border: 2px solid rgb(154,97,208);
} 

#orange1, #orange2 {
    background-color: rgb(247, 135, 2);
    border: 2px solid rgb(247, 135, 2);
    border-radius: 0px 0px 4px 4px;
    height: 120%;
}

#white1, #white2 {
        background-color: rgb(255,255,255);
        border: 2px solid rgb(255,255,255);
}



#red1:hover, 
#blue1:hover, 
#green1:hover,
#yellow1:hover,
#pink1:hover,
#purple1:hover,
#orange1:hover,
#red2:hover, 
#blue2:hover, 
#green2:hover,
#yellow2:hover,
#pink2:hover,
#purple2:hover,
#orange2:hover {
    transform: scaleX(1.1);
    transition: .4s;
    border-radius: 2px;
}

