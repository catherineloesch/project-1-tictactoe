

*, *::after, *::before {
    box-sizing: border-box;
    /* border: 1px solid grey; */
}

/* variables */

:root {
    --cell-size: 150px;
    /* making the symbol slightly smaller than the grid cell */
    --mark-size: calc(var(--cell-size) * 0.9)
}

/* element selectors */

body {
    margin: 0;
    width: 100%;
    /* height: 100vh; */
    height: 100%;
    display: grid;
    place-items: center;
    place-content: center;
    background-color: black;
    color: white;
    font-family: 'Comfortaa', futura, sans-serif;
}

main {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;

    /*
    
    column 1:   <aside class="left">      | 1fr
    column 2:   <section class="center">  | 2fr
    column 3:   <aside class="right">     | 1fr

     */
}

h1 {
    font-size: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

svg {
    color: white;
    background-color: black;
}


/*
---------------------------------------------------------------------------------------
left section of screen: score board -> column 1/3 in gid in <main>
---------------------------------------------------------------------------------------
*/

aside.left { /* left section of sceen, column 1/3 in gid in <main> */
    display: grid;
    grid-template-columns: 120%;
    grid-template-rows: 100%;
       
}

aside.left .score-board { /* <section> containing score board */
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 15% 45% 40%;
}

aside.left .score-board .score-board-title { /* h3 title for score board */
    display: flex;
    flex-direction : column;
    justify-content: flex-start;
    font-size: 2rem;
}
aside.left .score-board .player-scores { /* <div> containing both players name + score */
    font-size: 1.7rem;
    
}

.left .player-scores .score-board-display { /* <ul> containing one player's name + score */
    display: inline-block;
    list-style: none;
    margin: 0;
    padding: 0;
    margin: 2rem;
}

.left .score-board .player-scores .score { /* <li> displaying a player score */
    font-size: 2.2rem;
    padding-top: 2.5rem;
}

.left .score-board .draw-score-reset { /* <div> showing number of draws + reset button */
    display: grid;
    grid-template-columns: 50% 50%;
    grid-template-rows: 100%;
    width: 100%;
    height: 50%;
    justify-content: center;
    align-content: center;
    justify-items: center;

}

.left .score-board .draw-score-reset .draw-score { /* <div> showing number of draws */
    font-size: 1.8rem;
    display: flex;
    align-items:center;
    justify-content:center;
   
}

.left .score-board .draw-score-reset .btn-clear-scores {/* reset scores <button> */
    background-color: BLACK;
    border: none;
    cursor: pointer;
    display: flex;
    align-items:center;
    justify-content:center;
}

.player-scores, .scores-title, .score, .current-player-display {
    display:flex;
    justify-content: center;
    align-items: center;
}

/*
---------------------------------------------------------------------------------------
centre section of screen: grid+start game/reset buttons -> column 2/3 in gid in <main>
---------------------------------------------------------------------------------------
*/


/* .center: <section> elemement at center of sceen, column 2/3 in gid in <main> */

/* overlay button that starts the game and then disappears */
.center .start-game-btn {
    font-size: 2.5rem;
    font-family: 'Comfortaa', futura, sans-serif;
    background-color: black;
    border: 2px solid white;
    color:  white;
    padding: 1em 1em;
    cursor: pointer;
    border-radius: 8px;
    position:absolute;
    top:46.5%;
    left:50%;
    transform:translate(-50%, -50%);
    z-index: 1000;
    
}

.center .start-game-btn:hover {
    background-color: rgb(164, 197, 153);
    border: 2px solid rgb(40, 61, 35);
    color: rgb(40, 61, 35);
    transition: 0.3s;
}

/* grid */
.center .grid {
    width: 100%;
    height: 100%;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    grid-template-columns: repeat(3, auto);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 3px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

/* removing the outside border of the grid */
.cell:nth-child(1), .cell:nth-child(2), .cell:nth-child(3) {
    border-top: none;
}
.cell:nth-child(3n+3) {
    border-right: none;   
}
.cell:nth-child(9), .cell:nth-child(8), .cell:nth-child(7) {
    border-bottom: none;
}
.cell:nth-child(3n+1) {
    border-left: none;   
}

/* 
________________________________________________________________________________________
 */

/* x and o symbols for grid -> 'x' class for cross, 'o' class for circle*/

/* x symbol */
.cell.x::before, 
.cell.x::after, 
.grid.x .cell:not(.x):not(.o):hover::before,
.grid.x .cell:not(.x):not(.o):hover::after  {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
    background-color: white;
}

.cell.x::before,
.grid.x .cell:not(.x):not(.o):hover::before {
    transform: rotate(45deg);
}
.cell.x::after,
.grid.x .cell:not(.x):not(.o):hover::after {
    transform: rotate(-45deg);
}

/*  o symbol */
.cell.o::before,
.cell.o::after,
.grid.o .cell:not(.x):not(.o):hover::before,
.grid.o .cell:not(.x):not(.o):hover::after  {
    content: '';
    position: absolute;
    border-radius: 50%;    
}

/* larger circle i.e. "outside" circle */
.cell.o::before,
.grid.o .cell:not(.x):not(.o):hover::before {
    width: calc(var(--mark-size)* 0.9);
    height: calc(var(--mark-size)* 0.9);
    
}

/* slightly smaller circle i.e. "inside" circle */
.cell.x::before,
.cell.x::after,
.cell.o::before  {
    background-color: white;
}

/* preview lighter symbol when user hovers over empty cell */
.grid.x .cell:not(.x):not(.o):hover::before,
.grid.x .cell:not(.x):not(.o):hover::after,
.grid.o .cell:not(.x):not(.o):hover::before {
    background-color: rgb(47, 47, 47);
}

.cell.o::before,
.grid.o .cell:not(.x):not(.o):hover::before {
    width: calc(var(--mark-size)* 0.9);
    height: calc(var(--mark-size)* 0.9);
    
}

.cell.o::after,
.grid.o .cell:not(.x):not(.o):hover::after {
    width: calc(var(--mark-size)* 0.6);
    height: calc(var(--mark-size)* 0.6);
    background-color: black;
}

/* when cursor moves over cell that already has an x or o it changes to signal to user that cell is not available */
.cell.x, .cell.o {
    cursor: not-allowed;
}


.center .settings .btn-reset {
    /* margin: 0 2em; */
    /* padding: 0; */
    background-color: black;
    border: none;
    cursor: pointer;
}

/*  
---------------------------------------------------------------------------------------
right section of screen: players + turn display -> column 3/3 in gid in <main> 
---------------------------------------------------------------------------------------
*/

aside.right {
    display: grid;
    grid-template-columns: 110%;
    grid-template-rows: 33% 33% 33%;
    background-color: darkcyan;
       
}

.right .current-player-display .current-player { /* <div> displaying whose turn it is */
    color: gold;
    display: flex;
   
    font-size: 2rem;
}

/* player input -> lets user enter information like name */

.btn.add-player-info, .btn-submit-player-input {
    margin: 0 2em;
    padding: 0;
    background-color: BLACK;
    border: none;
    cursor: pointer;
}

.add-player-info:hover, .submit-player-info:hover, .reset:hover, .clear-scores:hover {
    transform: scale(1.2);
    color: rgb(164, 197, 153);
    transition: 0.3s;
}


.player, .settings {
    display:flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;

}

.player-input-form {
    display: none;
}

.player-input-form.display {
    display:flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}



#player-1 {
    margin-bottom: 1rem;
}

input {
    background-color: black;
    border-radius: 8px;
    width: 15em;
    height: 2.5em;
    border: 2px solid rgb(164, 197, 153);
    color: rgb(164, 197, 153);
    font-family: 'Comfortaa', futura, sans-serif;
    font-size: 1.1rem;
    outline: none;
}
::placeholder {
    color: rgb(164, 197, 153);
    opacity: 0.4;
}


section.players {
    font-size: 2rem;
    /* text-align: center; */
}



/* 
---------------------------------------------------------------------------------------
Overlay Message displaying winner or draw
---------------------------------------------------------------------------------------
*/

/* overlay message when there's a win or draw */
.message {
    display: none;
    position: fixed;
    text-align: center;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* background-color: rgba(57, 84, 51, 0.9); */
    background-color: rgba(59, 82, 53, 0.97);
    justify-content: center;
    align-items: center;
    color: gold;
    font-size: 6rem;
    flex-direction: column;
}

.message .btn {
    font-size: 2.5rem;
    font-family: 'Comfortaa', futura, sans-serif;
    background-color: rgb(164, 197, 153);
    border: 3px solid rgb(40, 61, 35);
    color:  rgb(40, 61, 35);
    padding: .25em .5em;
    cursor: pointer;
    margin-top: 1em;
    border-radius: 8px;
} 

.message .btn:hover {
    background-color: rgb(40, 61, 35);
    border: 3px solid rgb(164, 197, 153);
    color: rgb(164, 197, 153);
    transition: 0.4s;
}

.message.display {
    display: flex;
}
.message .draw-sad-face .sad-face {
    background-color: rgba(59, 82, 53, 0);
    color: gold;

}
.message .draw-sad-face {
    display:flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    margin-bottom: 1rem;
 
}

/* ___________________________________________________________________________________*/

/* small screen: w = 1440px | h= 900px */
/* second screen:  w = 1920px | h=1080px */
/* phone screen: ?? */